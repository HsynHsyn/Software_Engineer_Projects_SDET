Collections 15:59-1:52
• Defines several classes and interfaces which can be used to represent
a group of objects as single entity
• Growable in nature, can increase or decrease the size
• Can hold different non-primitive data types
• Standard data structure and there are ready methods to use

Collection
• Collection interface is considered as root interface of collection framework
• Collection interface defines th  e most common methods which are applicable for any
collection object

Method Name Method Name         Method Name
size()        isEmpty()         add()
addAll()      remove()          removeAll()
removeIf()    contains()        containsAll()
retainAll()   clear()           toArray()

List Interface
• Child interface of Collection
• Duplicates are allowed
• Insertion order preserved (eklenme sirasi korunur)
• Has index numbers

ArrayList
• Implements the List interface
• Internally uses array
• Retrieving the element is faster
not; if you use add() and remove() like this, arraylist performance is getting slower
    when you are retrieving the element arraylist performance is getting faster

LinkedList Class
    • Implements the List interface
    • Internally uses doubly linked list (pointer previous and after element)
    • Each value will have pointer to the next value
    • Inserting and deleting the element is faster (pros)
    . retrieving the element slower than array (cons)

Vector Class
• Implements the List interface
• Internally uses array
• Is Synchronized (thread-safe) (pros)
. it is slower

Stack Class
• Child class of Vector (Synchronized)
• Is Synchronized (thread-safe)
• Last-in, first out order (LIFO)




Process
• Programs that are scheduled for execution in the CPU
• An instance of a program running on a computer.
• A process has code, data, heap and other segments

Thread
• A subset of a process
• A sequence of execution within a process
• Every single process at least have one thread
• Shares all the resources of process

Multi-threading
• Two or more threads are being executed within the process

Synchronized (Thread-safety)
• Process of controlling the access of multiple threads to any shared resource
• Only one thread to access the shared resource at a time (Thread-safety)

Set Interface
• Child interface of Collection
• *** Duplicates are not allowed
• Insertion order not preserved
• *** Does not have index

HashSet Class
• Implements the Set interface
• Maintains the random order
• Accepts null values

LinkedHashSet Class
• Child class of HashSet
• Maintains the insertion order
• Accepts null values

TreeSet Class
• Implements the SortedSet interface
• Maintains the sorted (Ascending) order
• Does not accept null values